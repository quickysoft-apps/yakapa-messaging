{"version":3,"sources":["../src/data.js"],"names":["client","transport","getAgentByTag","tag","query","findEndUserByEmail","email","createAgent","nickname","endUserId","mutate"],"mappings":";;;;;;AAAA;;AACA;;AAEA,IAAMA,SAAS,iBAAU;AACvBC,aAAW,kCAAc,4DAAd;AADY,CAAV,CAAf;;AAIA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,SAAOH,OAAOI,KAAP,8IASH,EAAED,QAAF,EATG,CAAP;AAUD,CAXD;;AAaA,IAAME,qBAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,SAAON,OAAOI,KAAP,gGAKH,EAAEE,YAAF,EALG,CAAP;AAMD,CAPD;;AASA,IAAMC,cAAc,SAAdA,WAAc,CAACJ,GAAD,EAAMK,QAAN,EAAgBC,SAAhB,EAA8B;AAChD,SAAOT,OAAOU,MAAP,qCACqBP,GADrB,sBACyCK,QADzC,uBACmEC,SADnE,iDAAP;AAMD,CAPD;;kBASe;AACbP,8BADa;AAEbG,wCAFa;AAGbE;AAHa,C","file":"data.js","sourcesContent":["import { Lokka } from 'lokka'\nimport { Transport } from 'lokka-transport-http'\n\nconst client = new Lokka({\n  transport: new Transport('https://api.graph.cool/simple/v1/cixri1w220iji0121r8lr0n69')\n})\n\nconst getAgentByTag = (tag) => {  \n  return client.query(`\n  query agent($tag: String!) {\n    Agent(tag: $tag) { \n      tag\n      nickname\n      endUser {\n        email\n      }\n    }\n  }`, { tag })\n}\n\nconst findEndUserByEmail = (email) => {  \n  return client.query(`\n  query getEndUser($email: String!) {\n    EndUser(email: $email) {\n      id\n    }\n  }`, { email })\n}\n\nconst createAgent = (tag, nickname, endUserId) => {\n  return client.mutate(`{\n    item: createAgent(tag: \"${tag}\", nickname: \"${nickname}\", endUserId: \"${endUserId}\") {\n      id\n      updatedAt\n    }\n  }`)\n}\n\nexport default {\n  getAgentByTag,\n  findEndUserByEmail,\n  createAgent\n}"]}