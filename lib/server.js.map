{"version":3,"sources":["../src/server.js"],"names":["request","require","qs","DEFAULT_PUBLIC_PORT","DEFAULT_PRIVATE_PORT","DEFAULT_PUBLIC_SSL_PORT","DEFAULT_PRIVATE_SSL_PORT","DEFAULT_HOST","DEFAULT_SSL_HOST","storageSystems","ExtendableError","message","name","constructor","Error","captureStackTrace","stack","ServerError","data","AuthenticationError","Server","secure","_secure","sslOptions","key","readFileSync","cert","publicPort","privatePort","expressApp","webServer","socketServer","listen","handleRequests","sockets","on","socket","setReady","registerHandlers","use","next","tag","handshake","query","discoverAgent","res","error","console","now","yakapa","knownAgent","authenticatingTag","handlePassThrough","CHAT","EXECUTE","RESULT","CONFIGURED","callback","DiscoverError","findAgentByTag","then","system","host","Agent","nickname","email","endUser","User","indexOf","info","JSON","stringify","warn","catch","randomUser","first","commerce","productAdjective","last","firstName","generatedNickname","ignoreLessThanLength","join","in","emit","READY","json","parse","static","resolve","__dirname","get","req","sendFile","event","toJson","to","updateAgent","from","findEndUserByEmailAndAgentTag","EndUser","endUserId","id","agents","length","agent","updatedAgent","createAgent","newAgent"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express'\nimport fs from 'fs'\nimport path from 'path'\nimport https from 'https'\nimport http from 'http'\nimport io from 'socket.io'\nimport scn from 'string-capitalize-name'\nimport faker from 'faker'\nimport Common from './common'\n\nconst request = require('request')\nconst qs = require('qs')\n\nimport Events from './events'\nimport Repository from './repository'\n\n\nconst DEFAULT_PUBLIC_PORT = 80\nconst DEFAULT_PRIVATE_PORT = 3000\nconst DEFAULT_PUBLIC_SSL_PORT = 443\nconst DEFAULT_PRIVATE_SSL_PORT = 3443\nconst DEFAULT_HOST = 'http://mprj.cloudapp.net'\nconst DEFAULT_SSL_HOST = 'https://mprj.cloudapp.net'\n\nconst storageSystems = ['f1a33ec7-b0a5-4b65-be40-d2a93fd5b133']\n\nclass ExtendableError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = this.constructor.name;\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\t} else {\n\t\t\tthis.stack = (new Error(message)).stack;\n\t\t}\n\t}\n}\n\nclass ServerError extends ExtendableError {\n\tconstructor(message) {\n\t\tsuper(message)\n\t\tthis.data = 'ServerError'\n\t}\n}\n\nclass AuthenticationError extends ExtendableError {\n\tconstructor(message) {\n\t\tsuper('Authentication error: ' + message)\n\t\tthis.data = 'AuthenticationError'\n\t}\n}\n\nexport default class Server {\n\n\tconstructor(secure = true) {\n\n\t\tthis._secure = secure\n\n\t\tconst sslOptions = {\n\t\t\tkey: fs.readFileSync('/home/azemour/yakapa/yakapa-messaging/yakapass.pem'),\n\t\t\tcert: fs.readFileSync('/home/azemour/yakapa/yakapa-messaging/yakapass.crt')\n\t\t}\n\n\t\tthis.publicPort = secure ? DEFAULT_PUBLIC_SSL_PORT : DEFAULT_PUBLIC_PORT\n\t\tthis.privatePort = secure ? DEFAULT_PRIVATE_SSL_PORT : DEFAULT_PRIVATE_PORT\n\t\tthis.expressApp = express()\n\t\tthis.webServer = secure ? https.Server(sslOptions, this.expressApp) : http.Server(this.expressApp)\n\n\t\tthis.socketServer = io.listen(this.webServer)\n\n\t\tthis.handleRequests()\n\n\t\tthis.socketServer.sockets.on('connection', (socket) => {\n\t\t\tthis.setReady(socket)\n\t\t\tthis.registerHandlers(socket)\n\t\t})\n\n\t\tthis.socketServer.use((socket, next) => {\n\t\t\tconst tag = socket.handshake.query.tag\n\n\t\t\tthis.discoverAgent(tag, (res, error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`${Common.now()} ${error.message}`)\n\t\t\t\t\tnext(error)\n\t\t\t\t} else {\n\t\t\t\t\tsocket.yakapa = {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tknownAgent: res,\n\t\t\t\t\t\t\tauthenticatingTag: tag\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn next()\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t}\n\n\tregisterHandlers(socket) {\n\t\tthis.handlePassThrough(Events.CHAT, socket)\n\t\tthis.handlePassThrough(Events.EXECUTE, socket)\n\t\tthis.handlePassThrough(Events.RESULT, socket)\n\t\tthis.handlePassThrough(Events.CONFIGURED, socket)\n\t}\n\n\tdiscoverAgent(tag, callback) {\n\t\tif (!tag) {\n\t\t\tcallback(null, new DiscoverError('undefined tag'))\n\t\t}\n\t\tRepository.findAgentByTag(tag)\n\t\t\t.then((data) => {\n\t\t\t\tlet system = null\n\t\t\t\tlet host = this._secure ? DEFAULT_SSL_HOST : DEFAULT_HOST\n\t\t\t\tif (data.Agent) {\n\t\t\t\t\tsystem = {\n\t\t\t\t\t\tnickname: data.Agent.nickname,\n\t\t\t\t\t\temail: data.Agent.endUser.email,\n\t\t\t\t\t\ttag\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (data.User) {\n\t\t\t\t\tsystem = {\n\t\t\t\t\t\tnickname: 'Yakapa User',\n\t\t\t\t\t\temail: 'n/a',\n\t\t\t\t\t\ttag\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (storageSystems.indexOf(tag) !== -1) {\n\t\t\t\t\tsystem = {\n\t\t\t\t\t\tnickname: 'Yakapa Storage',\n\t\t\t\t\t\temail: 'n/a',\n\t\t\t\t\t\ttag\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (system) {\n\t\t\t\t\tconsole.info(Common.now(), `Connection ${JSON.stringify(system)}`)\t\n\t\t\t\t\tcallback(system, null)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(Common.now(), `Connection système inconnu ${tag}`)\n\t\t\t\t\tcallback(null, new AuthenticationError('Système non authorisé'))\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`${Common.now()} La découverte du système a échoué`, error)\n\t\t\t\tcallback(null, new ServerError(error.message))\n\t\t\t})\n\t} \n\n\tsetReady(socket) {\n\t\tconst randomUser = {\n\t\t\tname: {\n\t\t\t\tfirst: faker.commerce.productAdjective(),\n\t\t\t\tlast: faker.name.firstName()\n\t\t\t}\n\t\t}\n\t\tconst generatedNickname = scn(`${randomUser.name.first} ${randomUser.name.last}`, {\n\t\t\tignoreLessThanLength: 3\n\t\t})\n\t\tconst tag = socket.yakapa.data.authenticatingTag\n\t\tconst knownAgent = socket.yakapa.data.knownAgent\n\t\tconst nickname = knownAgent ? knownAgent.nickname : generatedNickname\n\t\tconst host = this._secure ? DEFAULT_SSL_HOST : DEFAULT_HOST\n\t\tsocket.join(tag)\n\t\tthis.socketServer.sockets.in(tag).emit(Events.READY, {\n\t\t\ttag,\n\t\t\tnickname\n\t\t})\n\t}\n\n\tlisten() {\n\t\tthis.webServer.listen(this.privatePort, () => {\n\t\t\tconsole.info(Common.now(), `Listening on *:${this.publicPort} --> *:${this.privatePort}`)\n\t\t})\n\t}\n\n\ttoJson(json) {\n\t\treturn typeof json === 'object' ? json : JSON.parse(json)\n\t}\n\n\thandleRequests() {\n\t\tthis.expressApp.use(express.static(path.resolve(__dirname, '..', 'static')))\n\t\tthis.expressApp.get('*', (req, res) => {\n\t\t\tres.sendFile(path.resolve(__dirname, '..', 'static', 'index.html'))\n\t\t})\n\t}\n\n\thandlePassThrough(event, socket) {\n\t\tsocket.on(event, (message) => {\n\t\t\tconst json = this.toJson(message)\n\t\t\tconsole.info(`${Common.now()} ${event}`, json)\n\t\t\tif (json.to) {\n\t\t\t\tthis.socketServer.sockets.in(json.to).emit(event, message)\n\t\t\t\treturn\n\t\t\t} else {\n\t\t\t\tif (event === Events.CONFIGURED) {\n\t\t\t\t\tthis.updateAgent(json.from, json.nickname, json.email)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.error(`${Common.now()} ${json.from} doit spécifier un destinataire`)\n\t\t})\n\t}\n\n\tupdateAgent(tag, nickname, email) {\n\t\tif (!email) {\n\t\t\treturn\n\t\t}\n\t\tRepository.findEndUserByEmailAndAgentTag(email, tag).then((data) => {\n\t\t\tif (!data.EndUser) {\n\t\t\t\treturn console.info(Common.now(), `Email inconnu : ${email}`)\n\t\t\t} else {\n\t\t\t\tconst endUserId = data.EndUser.id\n\t\t\t\tif (data.EndUser.agents.length > 0) {\n\t\t\t\t\tconst agent = data.EndUser.agents[0]\n\t\t\t\t\tif (agent.nickname !== nickname) {\n\t\t\t\t\t\tRepository.updateAgent(agent.id, nickname).then((data) => {\n\t\t\t\t\t\t\tconsole.info(Common.now(), `Agent mis à jour : ${data.updatedAgent.nickname}, ${email}`)\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tconsole.error(`${Common.now()} updateAgent`, error)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tRepository.createAgent(tag, nickname, endUserId).then((data) => {\n\t\t\t\t\t\tconsole.info(Common.now(), `Nouvel agent \"${data.newAgent.nickname}\" créé pour ${data.newAgent.endUser.email}`)\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tconsole.error(`${Common.now()} createAgent`, error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.error(`${Common.now()} findEndUserByEmailAndAgentTag`, error)\n\t\t})\n\t}\n\n}"]}