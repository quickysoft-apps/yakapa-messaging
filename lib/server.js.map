{"version":3,"sources":["../src/server.js"],"names":["DEFAULT_PUBLIC_PORT","DEFAULT_PRIVATE_PORT","DEFAULT_PUBLIC_SSL_PORT","DEFAULT_PRIVATE_SSL_PORT","DEFAULT_HOST","DEFAULT_SSL_HOST","Server","secure","_secure","sslOptions","key","readFileSync","cert","publicPort","privatePort","expressApp","webServer","socketServer","listen","use","static","resolve","__dirname","get","req","res","sendFile","sockets","on","socket","setReady","registerEvents","next","tag","handshake","query","findByTag","error","console","now","message","yakapa","data","knownAgent","authenticatingTag","registerStorageEvent","RESULT","registerRepositoryEvent","CONFIGURED","randomUser","name","first","commerce","productAdjective","last","firstName","generatedNickname","ignoreLessThanLength","nickname","host","join","in","emit","READY","info","event","json","toJson","update","from","email","to","STORAGE_AGENT_TAG"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express'\nimport fs from 'fs'\nimport path from 'path'\nimport https from 'https'\nimport http from 'http'\nimport io from 'socket.io'\nimport scn from 'string-capitalize-name'\nimport faker from 'faker'\n\nimport Common from './common'\nimport AgentRepository from './agentRepository'\nimport Events from './events'\nimport Errors from './errors'\n\nconst DEFAULT_PUBLIC_PORT = 80\nconst DEFAULT_PRIVATE_PORT = 3000\nconst DEFAULT_PUBLIC_SSL_PORT = 443\nconst DEFAULT_PRIVATE_SSL_PORT = 3443\nconst DEFAULT_HOST = 'http://mprj.cloudapp.net'\nconst DEFAULT_SSL_HOST = 'https://mprj.cloudapp.net'\n\nexport default class Server {\n\n\tconstructor(secure = true) {\n\n\t\tthis._secure = secure\n\n\t\tconst sslOptions = {\n\t\t\tkey: fs.readFileSync('/home/azemour/yakapa/yakapa-messaging/yakapass.pem'),\n\t\t\tcert: fs.readFileSync('/home/azemour/yakapa/yakapa-messaging/yakapass.crt')\n\t\t}\n\n\t\tthis.publicPort = secure ? DEFAULT_PUBLIC_SSL_PORT : DEFAULT_PUBLIC_PORT\n\t\tthis.privatePort = secure ? DEFAULT_PRIVATE_SSL_PORT : DEFAULT_PRIVATE_PORT\n\t\tthis.expressApp = express()\n\t\tthis.webServer = secure ? https.Server(sslOptions, this.expressApp) : http.Server(this.expressApp)\n\t\tthis.socketServer = io.listen(this.webServer)\n\n\t\tthis.expressApp.use(express.static(path.resolve(__dirname, '..', 'static')))\n\t\tthis.expressApp.get('*', (req, res) => {\n\t\t\tres.sendFile(path.resolve(__dirname, '..', 'static', 'index.html'))\n\t\t})\n\t\t\n\t\tthis.socketServer.sockets.on('connection', (socket) => {\n\t\t\tthis.setReady(socket)\n\t\t\tthis.registerEvents(socket)\n\t\t})\n\n\t\tthis.socketServer.use((socket, next) => {\n\t\t\tconst tag = socket.handshake.query.tag\n\n\t\t\tAgentRepository.findByTag(tag, (res, error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(`${Common.now()} ${error.message}`)\n\t\t\t\t\tnext(error)\n\t\t\t\t} else {\n\t\t\t\t\tsocket.yakapa = {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tknownAgent: res,\n\t\t\t\t\t\t\tauthenticatingTag: tag\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn next() \n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t}\n\n\tregisterEvents(socket) {\t\t\n\t\t//this.registerPassThroughEvent(Events.CHAT, socket)\n\t\tthis.registerStorageEvent(Events.RESULT, socket)\n\t\tthis.registerRepositoryEvent(Events.CONFIGURED, socket)\n\t}\n\n\tsetReady(socket) {\n\t\tconst randomUser = {\n\t\t\tname: {\n\t\t\t\tfirst: faker.commerce.productAdjective(),\n\t\t\t\tlast: faker.name.firstName()\n\t\t\t}\n\t\t}\n\t\tconst generatedNickname = scn(`${randomUser.name.first} ${randomUser.name.last}`, {\n\t\t\tignoreLessThanLength: 3\n\t\t})\n\t\tconst tag = socket.yakapa.data.authenticatingTag\n\t\tconst knownAgent = socket.yakapa.data.knownAgent\n\t\tconst nickname = knownAgent ? knownAgent.nickname : generatedNickname\n\t\tconst host = this._secure ? DEFAULT_SSL_HOST : DEFAULT_HOST\n\t\tsocket.join(tag)\n\t\tthis.socketServer.sockets.in(tag).emit(Events.READY, {\n\t\t\ttag,\n\t\t\tnickname\n\t\t}) \n\t}\n\n\tlisten() {\n\t\tthis.webServer.listen(this.privatePort, () => {\n\t\t\tconsole.info(Common.now(), `Listening on *:${this.publicPort} --> *:${this.privatePort}`)\n\t\t})\n\t}\n\t\n\tregisterRepositoryEvent(event, socket) {\n\t\tsocket.on(event, (message) => {\n\t\t\tconst json = Common.toJson(message)\n\t\t\tconsole.info(`${Common.now()} ${event}`, json)\t\t\t\n\t\t\tif (event === Events.CONFIGURED) {\n\t\t\t\tAgentRepository.update(json.from, json.nickname, json.email)\n\t\t\t\treturn\t\t\t\n\t\t\t}\t\t\t\n\t\t})\n\t}\n\t \n\tregisterPassThroughEvent(event, socket) {\n\t\tsocket.on(event, (message) => {\n\t\t\tconst json = Common.toJson(message)\n\t\t\tconsole.info(`${Common.now()} ${event}`, json)\n\t\t\tif (json.to) {\n\t\t\t\tthis.socketServer.sockets.in(json.to).emit(event, message)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconsole.error(`${Common.now()} ${json.from} doit spÃ©cifier un destinataire`)\n\t\t})\n\t}\n\t\n\tregisterStorageEvent(event, socket) {\n\t\tsocket.on(event, (message) => {\n\t\t\tconst json = Common.toJson(message)\n\t\t\tconsole.info(`${Common.now()} Storage event ${event}`, json)\t\t\t\n\t\t\tthis.socketServer.sockets.in(AgentRepository.STORAGE_AGENT_TAG).emit(event, message)\t\t\t\n\t\t})\n\t}\n\n}"]}