{"version":3,"sources":["../src/agentRepository.js"],"names":["STORAGE_AGENT_TAG","client","transport","findAgentByTag","tag","query","findEndUserByEmailAndAgentTag","email","createAgent","nickname","endUserId","mutate","updateAgent","id","findByTag","callback","DiscoverError","then","data","system","Agent","endUser","User","console","info","now","JSON","stringify","warn","AuthenticationError","catch","error","ServerError","message","update","EndUser","agents","length","agent","updatedAgent","newAgent"],"mappings":"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","file":"agentRepository.js","sourcesContent":["import { Lokka } from 'lokka'\nimport { Transport } from 'lokka-transport-http'\nimport Common from './common'\n\nconst STORAGE_AGENT_TAG = 'f1a33ec7-b0a5-4b65-be40-d2a93fd5b133'\n\nconst client = new Lokka({\n\ttransport: new Transport('https://api.graph.cool/simple/v1/cixri1w220iji0121r8lr0n69')\n})\n\nconst findAgentByTag = (tag) => {\n\treturn client.query(`\n  query findAgentByTag($tag: String!) {\n    Agent(tag: $tag) { \n      id\n      tag\n      nickname\n      endUser {\n        email\n      }\n    }\n    User(tag: $tag) {\n      id\n    }\n  }`, {\n\t\ttag\n\t})\n}\n\nconst findEndUserByEmailAndAgentTag = (email, tag) => {\n\treturn client.query(`\n  query ($email: String!, $tag: String!) {\n    EndUser(email: $email) {\n      id\n      agents(filter: {tag: $tag}) {\n        id\n        nickname      \n      }\n    }\n  }`, {\n\t\ttag,\n\t\temail\n\t})\n}\n\nconst createAgent = (tag, nickname, endUserId) => {\n\treturn client.mutate(`\n  {\n    newAgent: createAgent(tag: \"${tag}\", nickname: \"${nickname}\", endUserId: \"${endUserId}\") {\n      id\n      updatedAt\n      nickname\n      endUser {\n        email\n      }\n    }\n  }`)\n}\n\nconst updateAgent = (id, nickname) => {\n\treturn client.mutate(`\n  {\n   updatedAgent: updateAgent(id: \"${id}\", nickname: \"${nickname}\") {\n      id\n      updatedAt    \n      nickname\n    }\n  }`)\n}\n\nconst findByTag = (tag, callback) => {\n\tif (!tag) {\n\t\tcallback(null, new DiscoverError('undefined tag'))\n\t}\n\tfindAgentByTag(tag)\n\t\t.then((data) => {\n\t\t\tlet system = null\t\t\t\n\t\t\tif (data.Agent) {\n\t\t\t\tsystem = {\n\t\t\t\t\tnickname: data.Agent.nickname,\n\t\t\t\t\temail: data.Agent.endUser.email,\n\t\t\t\t\ttag\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (data.User) {\n\t\t\t\tsystem = {\n\t\t\t\t\tnickname: 'Yakapa User',\n\t\t\t\t\temail: 'n/a',\n\t\t\t\t\ttag\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tag === STORAGE_AGENT_TAG) {\n\t\t\t\tsystem = {\n\t\t\t\t\tnickname: 'Yakapa Storage',\n\t\t\t\t\temail: 'n/a',\n\t\t\t\t\ttag\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (system) {\n\t\t\t\tconsole.info(Common.now(), `Connection ${JSON.stringify(system)}`)\n\t\t\t\tcallback(system, null)\n\t\t\t} else {\n\t\t\t\tconsole.warn(Common.now(), `Connection système inconnu ${tag}`)\n\t\t\t\tcallback(null, new AuthenticationError('Système non authorisé'))\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(`${Common.now()} La découverte du système a échoué`, error)\n\t\t\tcallback(null, new ServerError(error.message))\n\t\t})\n}\n\nconst update = (tag, nickname, email) => {\n\tif (!email) {\n\t\treturn\n\t}\n\tfindEndUserByEmailAndAgentTag(email, tag).then((data) => {\n\t\tif (!data.EndUser) {\n\t\t\treturn console.info(Common.now(), `Email inconnu : ${email}`)\n\t\t} else {\n\t\t\tconst endUserId = data.EndUser.id\n\t\t\tif (data.EndUser.agents.length > 0) {\n\t\t\t\tconst agent = data.EndUser.agents[0]\n\t\t\t\tif (agent.nickname !== nickname) {\n\t\t\t\t\tupdateAgent(agent.id, nickname).then((data) => {\n\t\t\t\t\t\tconsole.info(Common.now(), `Agent mis à jour : ${data.updatedAgent.nickname}, ${email}`)\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tconsole.error(`${Common.now()} updateAgent`, error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcreateAgent(tag, nickname, endUserId).then((data) => {\n\t\t\t\t\tconsole.info(Common.now(), `Nouvel agent \"${data.newAgent.nickname}\" créé pour ${data.newAgent.endUser.email}`)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.error(`${Common.now()} createAgent`, error)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}).catch((error) => {\n\t\tconsole.error(`${Common.now()} findEndUserByEmailAndAgentTag`, error)\n\t})\n}\n\n\nexport default {\n\tSTORAGE_AGENT_TAG,\n\tfindByTag,\n\tupdate\n}"]}