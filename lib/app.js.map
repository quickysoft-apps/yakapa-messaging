{"version":3,"sources":["../src/app.js"],"names":["request","require","qs","DEFAULT_PUBLIC_PORT","DEFAULT_PRIVATE_PORT","DEFAULT_PUBLIC_SSL_PORT","DEFAULT_PRIVATE_SSL_PORT","DEFAULT_HOST","DEFAULT_SSL_HOST","now","Date","toJSON","slice","replace","ExtendableError","message","name","constructor","Error","captureStackTrace","stack","ServerError","data","DiscoverError","Server","secure","_secure","sslOptions","key","readFileSync","cert","publicPort","privatePort","expressApp","webServer","socketServer","listen","handleRequests","sockets","on","socket","setReady","registerHandlers","use","next","tag","handshake","query","discoverAgent","res","error","console","yakapa","knownAgent","authenticatingTag","handlePassThrough","CHAT","EXECUTE","RESULT","CONFIGURED","callback","findAgentByTag","then","nickname","email","host","Agent","endUser","User","agent","info","catch","randomUser","first","commerce","productAdjective","last","firstName","generatedNickname","ignoreLessThanLength","join","in","emit","READY","json","JSON","parse","static","resolve","__dirname","get","req","sendFile","event","toJson","to","updateAgent","from","findEndUserByEmailAndAgentTag","EndUser","endUserId","id","agents","length","updatedAgent","createAgent","newAgent","server"],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express'\nimport fs from 'fs'\nimport path from 'path'\nimport https from 'https'\nimport http from 'http'\nimport io from 'socket.io'\nimport scn from 'string-capitalize-name'\nimport faker from 'faker'\n\nconst request = require('request')\nconst qs = require('qs')\n\nimport Events from './events'\nimport Model from './model'\n\n\nconst DEFAULT_PUBLIC_PORT = 80\nconst DEFAULT_PRIVATE_PORT = 3000\nconst DEFAULT_PUBLIC_SSL_PORT = 443\nconst DEFAULT_PRIVATE_SSL_PORT = 3443\nconst DEFAULT_HOST = 'http://mprj.cloudapp.net'\nconst DEFAULT_SSL_HOST = 'https://mprj.cloudapp.net'\n\n\nconst now = () => {\n\treturn new Date().toJSON().slice(0,19).replace(/T/g,' ')\n}\n\nclass ExtendableError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else { \n      this.stack = (new Error(message)).stack; \n    }\n  }\n}  \n\nclass ServerError extends ExtendableError {\n  constructor(message) {\n    super(message)\n    this.data = 'ServerError'\n  }\n}\n\nclass DiscoverError extends ExtendableError {\n  constructor(message) {\n    super('Verification error: ' + message)\n    this.data = 'DiscoverError'\n  }\n}\n\nclass Server {\n\n  constructor(secure = true) {\n\n    this._secure = secure  \n   \n    const sslOptions = {\n      key: fs.readFileSync('/home/azemour/yakapa/yakapa-cra/socket-server/yakapass.pem'),\n      cert: fs.readFileSync('/home/azemour/yakapa/yakapa-cra/socket-server/yakapass.crt')\n    }\n\n    this.publicPort = secure ? DEFAULT_PUBLIC_SSL_PORT : DEFAULT_PUBLIC_PORT\n    this.privatePort = secure ? DEFAULT_PRIVATE_SSL_PORT : DEFAULT_PRIVATE_PORT\n    this.expressApp = express()    \n    this.webServer = secure ? https.Server(sslOptions, this.expressApp) : http.Server(this.expressApp)\n        \n    this.socketServer = io.listen(this.webServer)\n\n    this.handleRequests()\n\n    this.socketServer.sockets.on('connection', (socket) => {\n      this.setReady(socket)\n      this.registerHandlers(socket)\n    })\n    \n    this.socketServer.use((socket, next) => {      \n      const tag = socket.handshake.query.tag\n\t\t\t\n      this.discoverAgent(tag, (res, error) => {\n        if (error) {\n\t\t\t\t\tconsole.error(`${now()} ${error.message}`)\n          next(error)\n        } else {\n\t\t\t\t\tsocket.yakapa = {\n\t\t\t\t\t\tdata : {\n\t\t\t\t\t\t\tknownAgent : res,\n\t\t\t\t\t\t\tauthenticatingTag: tag              \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn next()\n        }                   \n      })           \n    })  \n    \n  } \n  \n  registerHandlers(socket) {\n    this.handlePassThrough(Events.CHAT, socket)\n    this.handlePassThrough(Events.EXECUTE, socket)\n\t\tthis.handlePassThrough(Events.RESULT, socket)\n\t\tthis.handlePassThrough(Events.CONFIGURED, socket)    \n  }\n  \n  discoverAgent(tag, callback) {\n    if (!tag) { \n      callback(null, new DiscoverError('undefined tag')) \n    }    \n    Model.findAgentByTag(tag)\n        .then((data) => {\n\t\t\t\t\tlet nickname = ''\n\t\t\t\t\tlet email = ''\n          let host = this._secure ? DEFAULT_SSL_HOST : DEFAULT_HOST\n          if (data.Agent) {             \n            nickname = data.Agent.nickname\n\t\t\t\t\t\temail = data.Agent.endUser.email                        \t\t\t\t\t\n            callback(data.Agent, null)\n          }\n\t\t\t\t\tif (data.User) {             \n            nickname = 'Opérateur Yakapa'\n\t\t\t\t\t\temail = 'operator@yakapa.com'\n\t\t\t\t\t\tconst agent = { nickname, email, tag }\t\t\t\t\t\t\n            callback(agent, null)\n          }\t\t\n\t\t\t\t\tif (!data.Agent && !data.User) {\n\t\t\t\t\t\tconsole.info(now(), `Agent inconnu : ${tag}`)\n            callback(null, null)\t\n\t\t\t\t\t} else { \n\t\t\t\t\t\tconsole.info(now(), `Connection ${nickname} (${email})`)\t\n\t\t\t\t\t}\n        })\n        .catch((error) => {\n          console.error(`${now()} La découverte de l'agent a échoué`, error)\n          callback(null, new ServerError(error.message))\n        })\n  } \n    \n  setReady(socket) {  \t\t\n\t\tconst randomUser = {\n\t\t\tname: {\n\t\t\t\tfirst: faker.commerce.productAdjective(),\n\t\t\t\tlast: faker.name.firstName()\n\t\t\t}\n\t\t}    \n\t\tconst generatedNickname = scn(`${randomUser.name.first} ${randomUser.name.last}`, {ignoreLessThanLength: 3})\n\t\tconst tag = socket.yakapa.data.authenticatingTag\n\t\tconst knownAgent = socket.yakapa.data.knownAgent\n\t\tconst nickname = knownAgent ? knownAgent.nickname : generatedNickname\n\t\tconst host = this._secure ? DEFAULT_SSL_HOST : DEFAULT_HOST    \n\t\tsocket.join(tag)\n\t\tthis.socketServer.sockets.in(tag).emit(Events.READY, { tag, nickname })    \n  }\n\t\n  listen() {\n    this.webServer.listen(this.privatePort, () => {\n      console.info(now(), `Listening on *:${this.publicPort} --> *:${this.privatePort}`)\n    })    \n  } \n\n  toJson(json) {\n    return typeof json === 'object' ? json : JSON.parse(json)\n  }\n\n  handleRequests() {\n    this.expressApp.use(express.static(path.resolve(__dirname, '..', 'static')))\n    this.expressApp.get('*', (req, res) => {\n      res.sendFile(path.resolve(__dirname, '..', 'static', 'index.html'))\n    })\n  }\n\n  handlePassThrough(event, socket) {\n    socket.on(event, (message) => {\n      const json = this.toJson(message)\n      console.info(`${now()} ${event}`, json)\n      if (json.to) {\n        this.socketServer.sockets.in(json.to).emit(event, message)\n\t\t\t\treturn\n      } else {\n\t\t\t\tif (event === Events.CONFIGURED) {\n\t\t\t\t\t\tthis.updateAgent(json.from, json.nickname, json.email)\t\t\t\t\t  \t\t\t\t\t\t\n\t\t\t\t\t\treturn\n\t\t\t\t}\n      }\n\t\t\tconsole.error(`${now()} ${json.from} doit spécifier un destinataire`)\n    })\n  }\n\t\n\tupdateAgent(tag, nickname, email) {\n\t\tif (!email) {\t\n\t\t\treturn\n\t\t}\n\t\tModel.findEndUserByEmailAndAgentTag(email, tag).then((data) => {\n\t\t\tif (!data.EndUser) {\n\t\t\t\treturn console.info(now(), `Email inconnu : ${email}`)\n\t\t\t} else {\n\t\t\t\tconst endUserId = data.EndUser.id\t\t\t\t\t\t\n\t\t\t\tif (data.EndUser.agents.length > 0) {\n\t\t\t\t\tconst agent = data.EndUser.agents[0]\t\t\t\t\t\n\t\t\t\t\tif (agent.nickname !== nickname) {\n\t\t\t\t\t\tModel.updateAgent(agent.id, nickname).then((data) => {\n\t\t\t\t\t\t\tconsole.info(now(), `Agent mis à jour : ${data.updatedAgent.nickname}, ${email}`)\n\t\t\t\t\t\t}).catch((error) => {console.error(`${now()} updateAgent`, error)} )\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tModel.createAgent(tag, nickname, endUserId).then((data) => {\n\t\t\t\t\t\tconsole.info(now(), `Nouvel agent \"${data.newAgent.nickname}\" créé pour ${data.newAgent.endUser.email}`)\n\t\t\t\t\t}).catch((error) => {console.error(`${now()} createAgent`, error)} )\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((error) => {console.error(`${now()} findEndUserByEmailAndAgentTag`, error)} )\n\t}\n  \n}\n\nconst server = new Server(true)\nserver.listen()\n"]}